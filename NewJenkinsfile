pipeline {
	agent any
  	environment {
		PROJECT_ID = 'atse-2-385716'
		ZONE = 'us-west1'
    	CLUSTER_NAME = 'quick-chat-application'
    	REPO_URL = 'https://github.com/ajshukla1902/QuickChat.git'
    	CREDENTIALS_ID = "kubernetes"
		APP_NAMESPACE = "deployment.yaml"
  	}

	stages {
    	stage('Clone code from GitHub Repo') {
      	    steps {
        	    checkout([$class: 'GitSCM', branches: [[name: '*/master']], userRemoteConfigs: [[url: env.REPO_URL]]])
      	    }
    	}

		stage('Build Docker Auth Image') {
      	    steps {
        		script {
        			auth = docker.build("atse2/quickchatauth:${env.BUILD_ID}", "./quick-chat-server-auth/")
        		}
        	}
        }

		stage('Build Docker Main Image') {
      	    steps {
        		script {
        			main1 = docker.build("atse2/quickchatmain:${env.BUILD_ID}", "./quick-chat-server-main/")
        		}
        	}
        }


		stage('Push Docker Auth Image') {
      	    steps {
        		echo "Push Docker Image"
        		withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]) {
        			sh "docker login -u atse2 -p ${dockerhub}"
        		}
				script {
        			auth.push("${env.BUILD_ID}")
	      	    }
			}
    	}

		stage('Push Docker Main Image') {
      	    steps {
        		echo "Push Docker Image"
        		withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]) {
        			sh "docker login -u atse2 -p ${dockerhub}"
        		}
				script {
        			main1.push("${env.BUILD_ID}")
	      	    }
			}
    	}

    	stage('Editing Auth & Main Deployment File') {
      	    steps {
			    echo "Setting up Deployment Files.....[!]"
				sh "sed -i 's/tagversion/${env.BUILD_ID}/g' quick-chat-server-auth/deployment.yaml"
				sh "sed -i 's/tagversion/${env.BUILD_ID}/g' quick-chat-server-main/deployment.yaml"
			}
		}


		stage('Deploy Auth Image to AWS Pod') {
			steps {
				echo "Starting Auth Deployment..... [!]"
                sh "kubectl apply -f quick-chat-server-auth/deployment.yaml"
                def aPod = sh(script: "kubectl get pods", returnStdout: true)
                echo "Output : ${aPod}"
				echo "Finished Auth Deployment..... [!]"
			}
		}

		stage('Deploy Main Image to AWS Pod') {
			steps {
				echo "Starting Main Deployment..... [!]"
                sh "kubectl apply -f quick-chat-server-main/deployment.yaml"
                def aPod = sh(script: "kubectl get pods", returnStdout: true)
                echo "Output : ${aPod}"
				echo "Finished Main Deployment..... [!]"
			}
		}

// Operations on React Image

        stage('Build Docker React Image') {
      	    steps {
        		script {
        			react = docker.build("atse2/quickchatreact:${env.BUILD_ID}")
        		}
        	}
        }

        stage('Push Docker React Image') {
      	    steps {
        		echo "Push Docker Image"
        		withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]) {
        			sh "docker login -u atse2 -p ${dockerhub}"
        		}
				script {
        			react.push("${env.BUILD_ID}")
	      	    }
			}
    	}

        stage('Editing React Deployment File') {
      	    steps {
			    echo "Setting up Deployment File.....[!]"
			    sh "sed -i 's/tagversion/${env.BUILD_ID}/g' deployment.yaml"
			}
		}

        stage('Fetching Auth and Main EIP') {
      	    steps {
			    echo "Fetching External IP for Auth & Main Services.....[!]"
                def authEIP = sh(script: "kubectl get service | awk '/auth/ {print $/4}'", returnStdout: true)
                echo "Auth EIP : ${authEIP}"    
                def mainEIP = sh(script: "kubectl get service | awk '/main/ {print $/4}'", returnStdout: true)
                echo "Main EIP : ${mainEIP}"
            }
		}

        stage('Editing EIP in Constants.ts') {
      	    steps {
			    echo "Initiating Change.....[!]"
			    sh "sed -i 's/34.168.174.126/${mainEIP}/g' src/Constants/Constants.ts"
                sh "sed -i 's/35.233.134.93/${authEIP}/g' src/Constants/Constants.ts"
			}
		}

        stage('Deploy React Image to AWS Pod') {
			steps {
				echo "Starting React Deployment..... [!]"
			    sh "kubectl apply -f deployment.yaml"
                def rPod = sh(script: "kubectl get pods", returnStdout: true)
                echo "Output : ${rPod}"
				echo "Finished React Deployment..... [!]"
			}
		}
	}
}
